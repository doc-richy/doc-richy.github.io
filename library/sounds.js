let V=new AudioContext;"suspended"===V.state&&V.resume();class i{constructor(e,t){this.source=e,this.loadHandler=t,this.actx=V,this.volumeNode=this.actx.createGain(),this.panNode=this.actx.createStereoPanner(),this.convolverNode=this.actx.createConvolver(),this.delayNode=this.actx.createDelay(),this.feedbackNode=this.actx.createGain(),this.filterNode=this.actx.createBiquadFilter(),this.soundNode=null,this.buffer=null,this.loop=!1,this.playing=!1,this.panValue=0,this.volumeValue=1,this.startTime=0,this.startOffset=0,this.playbackRate=1,this.randomPitch=!0,this.reverb=!1,this.reverbImpulse=null,this.echo=!1,this.delayValue=.3,this.feebackValue=.3,this.filterValue=0,this.load()}load(){let e=new XMLHttpRequest;e.open("GET",this.source,!0),e.responseType="arraybuffer",e.addEventListener("load",()=>{this.actx.decodeAudioData(e.response,e=>{this.buffer=e,this.hasLoaded=!0,this.loadHandler&&this.loadHandler()},e=>{throw new Error("Audio could not be decoded: "+e)})}),e.send()}play(){this.startTime=this.actx.currentTime,this.soundNode=this.actx.createBufferSource(),this.soundNode.buffer=this.buffer,this.soundNode.connect(this.volumeNode),!1===this.reverb?this.volumeNode.connect(this.panNode):(this.volumeNode.connect(this.convolverNode),this.convolverNode.connect(this.panNode),this.convolverNode.buffer=this.reverbImpulse),this.panNode.connect(this.actx.destination),this.echo&&(this.feedbackNode.gain.value=this.feebackValue,this.delayNode.delayTime.value=this.delayValue,this.filterNode.frequency.value=this.filterValue,this.delayNode.connect(this.feedbackNode),(0<this.filterValue?(this.feedbackNode.connect(this.filterNode),this.filterNode):this.feedbackNode).connect(this.delayNode),this.volumeNode.connect(this.delayNode),this.delayNode.connect(this.panNode)),this.soundNode.loop=this.loop,this.soundNode.playbackRate.value=this.playbackRate,this.soundNode.start(this.startTime,this.startOffset%this.buffer.duration),this.playing=!0}setReverb(e=2,t=2,i=!1){this.reverbImpulse=w(e,t,i),this.reverb=!0}setEcho(e=.3,t=.3,i=0){this.delayValue=e,this.feebackValue=t,this.filterValue=i,this.echo=!0}pause(){this.playing&&(this.soundNode.stop(this.actx.currentTime),this.startOffset+=this.actx.currentTime-this.startTime,this.playing=!1)}restart(){this.playing&&this.soundNode.stop(this.actx.currentTime),this.startOffset=0,this.startPoint=0,this.endPoint=this.buffer.duration,this.play()}playFrom(e){this.playing&&this.soundNode.stop(this.actx.currentTime),this.startOffset=e,this.play()}playSection(e,t){this.playing&&this.soundNode.stop(this.actx.currentTime),0===this.startOffset&&(this.startOffset=e),this.startTime=this.actx.currentTime,this.soundNode=this.actx.createBufferSource(),this.soundNode.buffer=this.buffer,this.soundNode.connect(this.panNode),this.panNode.connect(this.volumeNode),this.volumeNode.connect(this.actx.destination),this.soundNode.loop=this.loop,this.soundNode.loopStart=e,this.soundNode.loopEnd=t,this.soundNode.start(this.startTime,this.startOffset%this.buffer.duration,t-e),this.playing=!0}get volume(){return this.volumeValue}set volume(e){this.volumeNode.gain.value=e,this.volumeValue=e}get pan(){return this.panNode.pan.value}set pan(e){this.panNode.pan.value=e}}function e(e,t){return new i(e,t)}function o(e,i=0,a=1,t="sine",n=1,s=0,o=0,r=0,l=!1,u=0,c=0,h=void 0,d=void 0){let f=V.createOscillator(),p=V.createGain(),m=V.createStereoPanner();f.connect(p),p.connect(m),m.connect(V.destination),p.gain.value=n,m.pan.value=s,f.type=t;let v;if(v=0<u?(s=e-u/2,t=e+u/2,Math.floor(Math.random()*(t-s+1))+s):e,f.frequency.value=v,0<i&&T(p),0<a&&b(p),0<r&&g(f),h&&N(p),d&&y(p),0<c){u=V.createOscillator(),t=V.createOscillator(),s=V.createGain(),e=V.createGain();s.gain.value=n,e.gain.value=n,u.connect(s),s.connect(V.destination),t.connect(e),e.connect(V.destination),u.type="sawtooth",t.type="sawtooth",u.frequency.value=v+c,t.frequency.value=v-c,0<i&&(T(s),T(e)),0<a&&(b(s),b(e)),0<r&&(g(u),g(t)),h&&(N(s),N(e)),d&&(y(s),y(e)),x(u),x(t)}function y(e){var t=V.createConvolver();t.buffer=w(d[0],d[1],d[2]),e.connect(t),t.connect(m)}function N(e){var t=V.createGain(),i=V.createDelay(),a=V.createBiquadFilter();i.delayTime.value=h[0],t.gain.value=h[1],h[2]&&(a.frequency.value=h[2]),i.connect(t),(h[2]?(t.connect(a),a):t).connect(i),e.connect(i),i.connect(m)}function T(e){e.gain.value=0,e.gain.linearRampToValueAtTime(0,V.currentTime+o),e.gain.linearRampToValueAtTime(n,V.currentTime+o+i)}function b(e){e.gain.linearRampToValueAtTime(n,V.currentTime+i+o),e.gain.linearRampToValueAtTime(0,V.currentTime+o+i+a)}function g(e){var t=e.frequency.value;l?(e.frequency.linearRampToValueAtTime(t,V.currentTime+o),e.frequency.linearRampToValueAtTime(t+r,V.currentTime+o+i+a)):(e.frequency.linearRampToValueAtTime(t,V.currentTime+o),e.frequency.linearRampToValueAtTime(t-r,V.currentTime+o+i+a))}function x(e){e.start(V.currentTime+o)}x(f)}function w(e=2,i=2,a=!1){var n=V.sampleRate*e,e=V.createBuffer(2,n,V.sampleRate),s=e.getChannelData(0),o=e.getChannelData(1);for(let t=0;t<n;t++){let e;e=a?n-t:t,s[t]=(2*Math.random()-1)*Math.pow(1-e/n,i),o[t]=(2*Math.random()-1)*Math.pow(1-e/n,i)}return e}function t(i){if(0===i.length)throw new Error("Array to play sounds must be greater than 0.");let a=!0;for(let t=0;t<i.length;t++)for(let e=0;e<13;e++)[0,1,2,4,5,6,7,9,10].includes(e)?"number"!=typeof i[t][e]&&(a=!1):[3].includes(e)?["sine","triangle","square","sawtooth"].includes(i[t][e])||(a=!1):[8].includes(e)?"boolean"!=typeof i[t][e]&&(a=!1):[11,12].includes(e)&&void 0!==i[t][e]&&i[t][e].constructor!==Array&&(a=!1);if(!a)throw new Error("Some sounds can not be played. Check the array");i.forEach(e=>o(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12]))}let r=[];function a(i,e=!1,t="0"){if(0===i.length)throw new Error("Array to play sounds must be greater than 0.");let a=[];var n=[];let s=0;for(let t=0;t<i.length;t++){n=[];for(let e=0;e<13;e++)[0,1,2,4,5,6,7,9,10].includes(e)?(n.push(+i[t][e]),6===e&&(s=Math.max(s,i[t][e]))):[11,12].includes(e)?n.push([void 0,null,"undefined","u","null"].includes(i[t][e])?void 0:JSON.parse(i[t][e])):[8].includes(e)?n.push(!![!0,"true","yes","t","y"].includes(i[t][e])):[3].includes(e)&&n.push(["sine","triangle","square","sawtooth"].includes(i[t][e])?i[t][e]:"sine");13===n.length&&a.push(n)}e?(e=setInterval(()=>{a.forEach(e=>o(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12]))},1e3*s),r.push({id:t,interval:e})):a.forEach(e=>o(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12]))}export{V as actx,e as makeSound,o as soundEffect,t as playAll,r as intervalId,a as playAllNoneTransform};